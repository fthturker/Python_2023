Print Fonksiyonu ve Formatlama

Print() Fonksiyonu
Kodlarımızı dosyalara yazdığımızda, eğer ekrana bir değer bastırmak istersek print fonksiyonunu kullanırız. 
Kullanımı oldukça basittir ve değişik özelliklere sahiptir. Örneklerimize bakalım.
print(35)
35

print(3.14)
3.14

a = 4
b = 15
print(a+b)
19

print("Mustafa Murat Coşkun")
Mustafa Murat Coşkun

print("Murat'ın bugün dersi var.")
Murat'ın bugün dersi var.

Buradaki işlemlerde gördüğümüz gibi biz print fonksiyonunun içine bastırmak istediğimiz değeri veriyoruz ve bu fonksiyon da ekrana değerimizi bastırıyor. 
Peki aynı satırda birkaç değer bastırmak istersek ne yapıyoruz? 
Bunun için değerlerimizin arasına , karakterini atıyoruz.

print("Murat",12,545,66767,3.56)
Murat 12 545 66767 3.56

print("Mustafa","Murat","Coşkun")
Mustafa Murat Coşkun

Stringlerdeki Özel Karakterler
Pythonda stringlerde kullanılan özel karakterler mevcuttur ve kullanıldıkları yerler de işlerimizi kolaylaştırır. En çok kullanılan 2 tanesi şunlardır;

\n karakteri
Eğer print() fonksiyonu stringlerde böyle bir karakterle karşılaşırsa alt satırdan ekrana yazdırma işlemine devam eder.

print("Merhaba\nNasılsın\nİyi misin")
Merhaba
Nasılsın
İyi misin

print("Selam\nGençler")
Selam
Gençler

\t karakteri
Eğer print() fonksiyonu stringlerde böyle bir karakterle karşılaşırsa bir tab boşluk bırakarak ekrana yazdırma işlemine devam eder.

print("Ocak\tMart\tŞubat")
Ocak	Mart	Şubat

print("a\t\t\t\t\tb")
a					b

type() fonksiyonu
print() fonksiyonundan bahsetmişken type() fonksiyonunu öğrenmekte fayda var. type() fonksiyonu içine gönderilen değerin hangi veri tipinden olduğunu söyler.

# Integer (Tamsayı) türü
a = 65
print(type(a))
<class 'int'>

# Float (Ondalıklı Sayı) türü
a = 5.87
print(type(a))
<class 'float'>

# String (Karakter Dizisi) türü
a = "Murat"
print(type(a))
<class 'str'>

Print() Fonksiyonunun Özellikleri
Ekrana yazdırma işlemlerimiz sırasında print() fonksiyonunun faydalı özelliklerini kullanırsak yazdığımız kodu daha verimli kılabiliriz. 
Bunun için burada 2 tane özellikten bahsedeceğiz.

sep parametresi
print() fonksiyonunda kullanılabilen sep parametresi yazdırdığımız değerlerin arasına istediğimiz karakterlerin yerleştirilmesini sağlar. 
Eğer bu parametreyi kullanmazsak değerlerin arasına varsayılan olarak boşluk yerleştirildiğini biliyoruz.

print(3,4,5,6,7,8,9)
3 4 5 6 7 8 9

# sep parametresi sayesinde değerlerin arasına nokta konuyor.
print(3,4,5,6,7,8,9,sep = ".")
3.4.5.6.7.8.9

# Değerlerin arasında "/" sembolü yerleştiriliyor.
print("06","04","2015",sep = "/")
06/04/2015

print("Mustafa","Murat","Coşkun",sep = "\n")
Mustafa
Murat
Coşkun

Yıldızlı Parametreler
Eğer bir stringin başına * işareti koyup, print fonksiyonuna gönderirsek bu string karakterlerine ayrılacak ve 
her bir karakter ayrı birer string olarak davranılarak ekrana basılacaktır.

# Varsayılan olarak karakterlerin arasına boşluk konuluyor.
print(*"Python")
P y t h o n

print(*"Python",sep = "\n")
P
y
t
h
o
n

print(*"TBMM",sep =".")
T.B.M.M

Formatlama
Programlama yaparken bazı yerlerde bir stringin içinde daha önceden tanımlı string,float, int vs. değerleri yerleştirmek isteyebiliriz. 
Böyle durumlar için Pythonda format() fonksiyonu bulunmaktadır. Örneğin, programımızda 3 tane tamsayı değerimiz var ve biz bunları bir string içinde ekrana basmak istiyoruz. 
Bunun için format() fonksiyonunu kullanabiliriz. format() fonksiyonunun çok fazla özelliği olduğu için, ben burada sadece en çok kullandığımız özelliğini göstereceğim.

# Burada 3 tane süslü parantezimiz ({}) var ve bunların yerine sırasıyla format fonksiyonun içindeki değerler geçiyor.
"{} {} {}".format(3.1423,5.324,7.324324)
'3.1423 5.324 7.324324'

a = 3
b = 4
print("{} + {} 'nin toplamı {} 'dır".format(a,b,a+b))
3 + 4 'nin toplamı 7 'dır

# Süslü parantezlerin içindeki sayılar format fonksiyonun içinden hangi sıradaki değerin geleceğini söylüyor.
"{1} {0} {2}".format(43,"Murat",54)
'Murat 43 54'

# Süslü parantezlerin içindeki kullanım ondalıklı kısmın sadece 2 basamağına kadar almak istediğimiz söylüyor.
"{:.2f} {:.2f} {:.3f}".format(3.1463,5.324,7.324324)
'3.15 5.32 7.324'

Format fonksiyonu ile ilgili kullanımları ihtiyacınız olduğu zaman şu web sitesinden yararlanarak uygulayabilirsiniz; https://pyformat.info/

